#指定根日志
log4j.rootLogger=info,console,file,rollFile,hourFile

#定义一个控制台日志附加器
log4j.appender.console=org.apache.log4j.ConsoleAppender
#控制输出到控制台使用的目标,可以使用System.out(黑色文字输出)或System.err(红色文字输出)
log4j.appender.console.Target=System.out
#指定附加器控制输出的日志
log4j.appender.console.layout=org.apache.log4j.PatternLayout
#定义附加器日志输出的格式,-表示打印内容靠左对齐
log4j.appender.console.layout.ConversionPattern=[PLog4j] %-d{yyyy-MM-dd HH:mm:ss,SSS} [%-5p] %c:%l - %m%n

#定义一个文件附加器
log4j.appender.file=org.apache.log4j.FileAppender
#Threshold:指定当前附加器打印日志的最低输出级别，默认为debug
log4j.appender.file.Threshold=error
#定义文件输出的位置和名称
log4j.appender.file.File=d:/log/file.log
#指定日志打印控制格式的对象
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern=[PLog4j] %-d{yyyy-MM-dd HH:mm:ss,SSS} [%-5p] %c:%l - %m%n

#定义一个滚动文件附加器
log4j.appender.rollFile=org.apache.log4j.RollingFileAppender
#定义文件输出的位置和名称
log4j.appender.rollFile.File=d:/log/rollfile.log
#备份文件的最大大小是多少，后缀可以是KB,MB,GB,在日志文件到达指定大小的时候，将会自动滚动生成新文件，
#即将原来的内容移动到rollFile.log.1
log4j.appender.rollFile.MaxFileSize=5KB
#MaxBackupIndex:指定最近备份日志文件的数量，指定可以产生的滚动文件的最大数，例如设为2，则可以
#产生rollfile.log.1 rollfile.log.2这两个滚动文件和一个rollfile.log
log4j.appender.rollFile.MaxBackupIndex=10
#指定日志打印控制格式的对象
log4j.appender.rollFile.layout=org.apache.log4j.PatternLayout
log4j.appender.rollFile.layout.ConversionPattern=[PLog4j] %-d{yyyy-MM-dd HH:mm:ss,SSS} [%-5p] %c:%l - %m%n

#定义一个滚动文件附加器
log4j.appender.hourFile=org.apache.log4j.DailyRollingFileAppender
#Threshold:指定日志打印输出的最低级别,默认为debug
log4j.appender.hourFile.Threshold=error
#Appender:true表示日志内容追加到文件中，false为覆盖之前的日志内容,默认为true
log4j.appender.hourFile.Append=true
#指定日志输出的位置及名称
log4j.appender.hourFile.File=d:/log/hourfile.log
#DatePattern:设置产生新文件之后，老的日志文件的后缀格式
log4j.appender.hourFile.DatePattern='.'yyyy-MM-dd-HH
#格式控制对象
log4j.appender.hourFile.layout=org.apache.log4j.PatternLayout
#定义日志输出的格式
log4j.appender.hourFile.layout.ConversionPattern=[Plog4j] %-d{yyyy-MM-dd HH:mm:ss,SSS} [%-5p] %c:%l - %m%n










